<div class="container d-flex justify-content-center p-3 cardHero text-light">
   <h4>{{groupData.groupName}}</h4>
</div>
<hr>

<div id="localToolGroup">
  <div class="btnToolData">
    <div class="dropdown">
      <div class="iconMembers" type="button" data-bs-toggle="dropdown" aria-expanded="false">
      <button class="btnTool">
        <span class="material-symbols-outlined p-3 text-light members">
          groups
        </span>
      </button>
    </div>
      <ul class="dropdown-menu">
        <div class="d-flex justify-content-center">
          <h4>Membros</h4>
        </div>
        <hr>
        {{#each groupData.members}}
          <li class="list-group-item listMember p-3">
            <strong>{{this.username}}</strong>
            <span data-user-id="{{this._id}}">
              {{#if this.isOnline}} ðŸŸ¢ {{else}} ðŸ”´ {{/if}}
            </span>
          </li>
        {{else}}
          <div class="d-flex mt-4 justify-content-center">
            <h5>Nenhum participante neste grupo</h5>
          </div>
        {{/each}}
      </ul>
    </div>
    <div class="iconMembers" type="button">
      <button class="btnTool" onclick="openFormAdd()">
        <span class="material-symbols-outlined p-3 text-light members">
          person_add
        </span>
      </button>
    </div>
  </div>
  <div class="inputAdd inputContent" id="form">
    <div class="localdFriends">
      <span class="material-symbols-outlined closeWindow" id="closeWindow">
        close
      </span>
      <div class="d-flex mb-3 justify-content-center"> 
        <h5>Adicione amigo(a) ao grupo: </h5>
      </div>
      {{#each friendsNotInGroup}}
        <div class="localDataFriend">
          <div>
            <img src="{{this.avatar}}" height="50px" alt="">
          </div>
          <div>
            {{this.username}}
          </div>
          <form action="/user/addMember/{{this._id}}" method="post">
          <input type="hidden" value="{{../groupData._id}}" name="idGroup">
            <div class="btns">
              <button type="submit" class="btnAction">Add</button>
            </div>
          </form>
        </div>
      {{else}}
        <div class="d-flex justify-content-center">
          <span class="text-danger">Todos os seus amigos jÃ¡ fazem parte deste grupo!</span>
        </div>
      {{/each}}
    </div>
  </div>
</div>

<div class="localChat">
    <div class="container contentMsg">
        <div class="contentChat">
            <div id="messages"></div>
        </div>

        <form class="p-3" id="messageForm">
            <input class="form-control" type="text" id="messageInput" placeholder="Digite sua mensagem..." required>
            <button class="btnSend" type="submit">
              <span class="material-symbols-outlined">
                send
              </span>
            </button>
        </form>
    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io({ query: { userId: "{{user._id}}" } })
  // Atualiza status online/offline
  socket.on("userStatusChange", ({ userId, isOnline }) => {
      const userElement = document.querySelector(`[data-user-id="${userId}"]`)
      if (userElement) {
          userElement.innerHTML = isOnline ? 'ðŸŸ¢' : 'ðŸ”´'
      }
  })

  const groupId = "{{group._id}}" 
  const userId = "{{user._id}}" 

  document.getElementById('messageForm').addEventListener('submit', (event) => {
    event.preventDefault()
    const message = document.getElementById('messageInput').value
    socket.emit('sendMessage', { groupId, message, userId, username: "{{user.username}}" })
    document.getElementById('messageInput').value = ''
  })

  socket.on('receiveMessage', (data) => {
    const msgDiv = document.createElement('div')
    msgDiv.classList.add('msgStyle')

    const userName = document.createElement('strong')
    userName.textContent = data.username
    msgDiv.appendChild(userName)

    const messageText = document.createElement('span')
    messageText.textContent = `: ${data.message}`
    msgDiv.appendChild(messageText)

    const loggedUserId = "{{user._id}}".toString()
    if (data.userId === loggedUserId) {
        msgDiv.classList.add("me")
        document.getElementById('messages').classList.add('meBloque')
    } else {
        msgDiv.classList.add("other")
        document.getElementById('messages').classList.add('otherBloque')
    }

    document.getElementById('messages').appendChild(msgDiv)
  })
</script>

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy" crossorigin="anonymous"></script>

